apath:le type n'est pas char pour l'adresse c'est un type struct test
alors en créant un pointeur temporaire tu peux sauvegarder l'adresse next
avant de free l'actuel et ensuite apres avoir free l'actuel
mettre l'adresse sauvegardé (donc la next) dans l'actuel. En gros :

struct test *temp;
temp=actuel->next;
free(actuel);
actuel=temp;

spycom:L'exercice ma bien aidé mais il m'a pris du temps va falloir que je manipule beaucoup pour que
cela rentre en memoire. Pour free_list je ne vois pas trop comment faire stocker l'adresse dans une variabler char ?

apath:Dans la fonction free_list il y a une erreur, tu as libéré l'adresse actuel
avant de lire l'adresse next qu'il contient faut corriger ça. Sans quoi c'est du bon!
Est-ce que ça t'as aidé à mieux comprendre les listes chaînées ?

spycom:Bon je regarde tout cela et j'essaye de comprendre tout cela.

apath:j'ajoute une petite vidéo car je sais que le concept de
listchainee est assez raid à comprendre au début et à expliquer ça
l'est presque autant j'espère que ça va te donner le déclique avec
les commentaires que j'y ai mis.
apres on va commencer à se pencher sur le second projet!
il est important que tu arrives à faire ce petit exo et le comprendre.
La vidéo ne passe pas sur github donc l'ai up sur rutube voici le lien
http://rutube.ru/tracks/5720133.html
arg la qualité a été modifié par le site... impossible de lire correctement
le code vais la up sur youtube
bon il n'a pas gardé mes dimenssion 800x600 de la vidéo et à retrogradé
la qualité mais c'est lisible : http://www.youtube.com/watch?v=LoBSCNQCfZA

